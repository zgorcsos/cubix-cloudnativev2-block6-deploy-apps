apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-cubix.fullname" . }}
  labels:
    {{- include "spring-cubix.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "spring-cubix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spring-cubix.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spring-cubix.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if and .Values.configMap.enabled (eq .Values.configMap.as "file") }}
      volumes:
      - name: config
        configMap:
          name: {{ include "spring-cubix.fullname" . }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and .Values.configMap.enabled (eq .Values.configMap.as "file") }}
          volumeMounts:
          - name: config
            mountPath: /config
          {{- end }}
          startupProbe: 
            initialDelaySeconds: 2
            periodSeconds: 5
            failureThreshold: 5
            tcpSocket:
              port: 8080
          livenessProbe: 
            periodSeconds: 5
            failureThreshold: 5
            httpGet:
              port: management
              path: /actuator/health/liveness
          readinessProbe: 
            periodSeconds: 5
            failureThreshold: 5
            httpGet:
              port: management
              path: /actuator/health/readiness
          env:
          - name: JAVA_OPTS
            value: {{ .Values.javaOpts | quote }}
          - name: MANAGEMENT_SERVER_PORT
            value: "9080"
          - name: OTEL_SERVICE_NAME
            value: {{ include "spring-cubix.fullname" . }}
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: {{ required "OpenTelemetry target URL is required!" .Values.openTelemetry.targetUrl }}
          - name: OTEL_METRICS_EXPORTER
            value: none
          {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ .value | quote }}
          {{- end }}
          {{- range .Values.secret }}
          - name: {{ .envName }}
            valueFrom:
              secretKeyRef:
                name: {{ .secretName }}
                key: {{ .secretKey }}
          {{- end }}
          {{- if and .Values.configMap.enabled (eq .Values.configMap.as "env") }}
          envFrom:
          - configMapRef:
              name: {{ include "spring-cubix.fullname" . }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 9080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
